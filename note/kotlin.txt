Var 变量   Val 常量

Elvis操作符,?:左边的返回值不为空则返回，否则返回？：右边的值
var len = a.length?: -1

lateinit(不支持基础数据类型,基础数据类型like this private var mNumber: Int by Delegates.notNull()) 
延迟初始化(ex:在Activty中初始化Context) 

by Lazy

字符串拼接：val firstName = "Amit"
            val lastName = "Shekhar"
            val message = "My name is: $firstName $lastName"

            val s = "abc"
            val str = "$s.length is ${s.length}" // 结果为 "abc.length is 3"

isNullOrEmpty 和 isNullOrBlank 

Note that this is not a class, or an object
const val PRESENTATION_MODE_PRESENTING = "presenting"

需要被继承的 open关键字

internal 声明，在同一模块中的任何地方可见

变长参数
fun hello(vararg names: String){ } 




泛型：
        java:? extends T意味着集合中允许添加的类型不仅仅是T还包括T的子类(协变-读取)
             ? super T (逆变-写入)
      kotlin: out-协变
              in-逆变


	     协变	     逆变
关键字	 out	      in
读写	只读	     可写
位置	返回值	     参数
角色	生产者	     消费者

apply:在写需要设置大量回调与属性的UI代码上相当好用


Kotlin tips：

 if (savedInstanceState == null) {
            mNumFailedAttempts = 0
        } else {
            mNumFailedAttempts = savedInstanceState.getInt("num_failed_attempts")
        } ==>>
               mNumFailedAttempts = savedInstanceState?.getInt("num_failed_attempts") ?: 0



 return try {
            true
        } catch (e: Exception) {
            e.printStackTrace()
            false
        }

？操作符
表示这个对象可能为空

==判断值是否相等，===判断值及引用是否完全相等、

in  判断一个对象是否在某一个区间内
if (x in 1..y-1) 

is  判断一个对象是否为一个类的实例
if (obj is String)

vararg 变长参数
fun hello(vararg names: String) {}

yield 协程
suspend，用作修饰会被暂停的函数，被标记为 suspend 的函数只能运行在协程或者其他 suspend 函数当中

遍历Map
for ((k, v) in map) {
    println("$k -> $v")
}

for (i in 1..100) { …… }  // 闭区间：包含 100
for (i in 1 until 100) { …… } // 半开区间：不包含 100
for (x in 2..10 step 2) { …… }
for (x in 10 downTo 1) { …… }
if (x in 1..10) { …… }

字符串模板
val i = 10
println("i = $i") // 输出“i = 10”


val s = "abc"
println("$s.length is ${s.length}") // 输出“abc.length is 3”


中缀表示法
它们必须是成员函数或扩展函数；
它们必须只有一个参数；
其参数不得接受可变数量的参数且不能有默认值

infix fun Int.shl(x: Int): Int {}
1 shl 2

列表：List/MutableList；
集：Set/MutableSet；
映射：Map/MutableMap；
集合：Collection/MutableCollection；
迭代器：Iterable/MutableIterable；


如果函数接收的参数是可变参数，传入数组默认不会展开，需要在前面添加*号
* array

拿name举例，添加了var, 我们可以这样做, var name = user.name, 
如果没有添加的话，User类是没有name这个成员变量的，仅仅相当于声明了一个带有name的构造函数而已，
而这个name是没有任何用处的

初始化代码 init{}
同一个类中可以有多个init
init与成员变量按顺序执行
类中没有主构造函数 init依然优先于二级构造函数

方法、属性重写需要加上open

访问父类属性或者方法 使用super关键字
在内部类中super@

嵌套类无法访问外部类成员
内部类使用inner 持有外部类引用



