apply plugin: 'com.android.application'
apply plugin: 'realm-android'
apply plugin: 'com.jakewharton.hugo'
apply plugin: 'com.google.protobuf'
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        applicationId "com.national.security.community"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }

        multiDexEnabled true

        ndk {
            moduleName = "native-lib"
            // 设置支持的SO库架构
            abiFilters 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
            ldLibs "log"
        }
        /*javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }*/

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
//SVG兼容使用
        // vectorDrawables.useSupportLibrary = true

    }

    signingConfigs {
        debug {
            keyAlias 'key1'
            keyPassword 'gasq110'
            storeFile file('key/gasq.jks')
            storePassword 'gasq110'
            archivesBaseName = "国安社区"
        }

        release {
            keyAlias 'key1'
            keyPassword 'gasq110'
            storeFile file('key/gasq.jks')
            storePassword 'gasq110'
            archivesBaseName = "国安社区"
        }
    }

    buildTypes {
        release {

            buildConfigField("Boolean", "enableLog", "false")
            buildConfigField("String", "HOST_URL", "\" http://47.93.29.96/weijinrong/app/\"")
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                if (variant.buildType.name == 'release') {
                    variant.outputs.all {
                        def apkName = "gradle4android_v${variant.versionName}"
                        if (!variant.flavorName.isEmpty()) {
                            apkName += "_${variant.flavorName}"
                        }
                        outputFileName = apkName + "_${releaseTime()}.apk"
                    }
                }
            }
            //针对很多渠道
            productFlavors.all { flavor ->
                manifestPlaceholders.put("UMENG_CHANNEL_VALUE", name)
            }

        }

        debug {
            minifyEnabled false
            buildConfigField("Boolean", "enableLog", "true")
            buildConfigField("String", "HOST_URL", "\" http://47.93.29.96/weijinrong/app/\"")
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }


    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            proto {
                srcDir 'src/main/proto'
                //include '**/*.proto'
            }
        }
    }
    lintOptions {
        //lint 遇到 error 时继续 构建
        abortOnError false
        //build release 版本 时 开启lint 检测
        checkReleaseBuilds false
        // 防止在发布的时候出现因MissingTranslation导致Build Failed!
        disable 'MissingTranslation'
    }

    flavorDimensions 'tier'
    productFlavors {//多渠道打包
        xiaomi {
            dimension 'tier'
            applicationId 'com.national.security.community1'
            manifestPlaceholders.put("UMENG_CHANNEL_VALUE", 'xiaomi')
        }
        googlepaly {
            dimension 'tier'
            applicationId 'com.national.security.community2'
            manifestPlaceholders.put("UMENG_CHANNEL_VALUE", 'googlepaly')
        }
    }
    packagingOptions {
//        exclude('META-INF/DEPENDENCIES')
//        exclude('META-INF/NOTICE')
//        exclude('META-INF/LICENSE')
        exclude('META-INF/LICENSE.txt')
        exclude('META-INF/NOTICE.txt')
    }

}

static def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

apply plugin: 'replugin-host-gradle'
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //noinspection GradleCompatible
    //不能升级 别问我为什么  不知道
    implementation 'com.android.support:design:27.0.2'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    implementation 'com.android.support:support-annotations:27.1.0'
    //implementation 'com.android.support:percent:27.0.2'
    //di
    implementation 'com.google.dagger:dagger:2.13'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.13'
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    compileOnly 'org.glassfish:javax.annotation:10.0-b28'
    //rx 2.x
    implementation 'io.reactivex.rxjava2:rxjava:2.1.7'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    //network
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    implementation 'com.squareup.okhttp3:okhttp:3.9.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.1'
    implementation 'com.github.bumptech.glide:okhttp3-integration:4.3.1'

    implementation 'com.android.support:multidex:1.0.3'

    implementation 'com.orhanobut:logger:2.1.1'
//fragmentation
    implementation 'me.yokeyword:fragmentation:1.3.1'
    implementation 'me.yokeyword:fragmentation-swipeback:1.3.1'
    implementation 'me.yokeyword:eventbus-activity-scope:1.1.0'
//rxpermissions
    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.4@aar'
    //rxCache
    implementation('com.github.VictorAlbertos.RxCache:runtime:1.8.0-2.x') {
        exclude module: 'rxjava'
        exclude module: 'dagger'
    }
    implementation 'com.github.VictorAlbertos.Jolyglot:gson:0.0.3'
    //adapter 下拉刷新
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.34'
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.5.1'
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.0.5.1'

    implementation 'top.zibin:Luban:1.1.3'
    //Glide
    implementation 'com.github.bumptech.glide:glide:4.5.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.5.0'
    //圆角 高斯模糊等
    implementation 'jp.wasabeef:glide-transformations:3.0.1'
    implementation 'org.greenrobot:eventbus:3.1.1'
    // BugLy
    implementation 'com.tencent.bugly:crashreport:2.6.6.1'
    //rxLife
    implementation 'com.trello.rxlifecycle2:rxlifecycle-android:2.2.1'
    implementation 'com.trello.rxlifecycle2:rxlifecycle-components:2.2.1'
    implementation 'com.trello.rxlifecycle2:rxlifecycle-android:2.2.1'

    implementation 'com.jakewharton.rxbinding2:rxbinding:2.1.0'

    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.3'

    implementation 'com.airbnb.android:lottie:2.3.1'

    implementation files('libs/tbs_sdk_thirdapp_v3.2.0.1104_43200_sharewithdownload_withfilereader_withoutGame_obfs_20170609_115346.jar')
    //宿主程序
    implementation 'com.qihoo360.replugin:replugin-host-lib:2.2.1'
    implementation 'com.github.Kennyc1012:MultiStateView:1.3.2'
    // Room
    implementation 'android.arch.persistence.room:runtime:1.0.0'
    annotationProcessor "android.arch.persistence.room:compiler:1.0.0"
    implementation 'android.arch.paging:runtime:1.0.0-alpha4-1'
    implementation 'android.arch.persistence.room:rxjava2:1.0.0'

    //ARouter
    implementation 'com.alibaba:arouter-api:1.2.2'
    annotationProcessor 'com.alibaba:arouter-compiler:1.1.3'
    //SVG
    implementation 'com.eftimoff:android-pathview:1.0.8@aar'
    //PictureSelector
    implementation 'com.github.LuckSiege.PictureSelector:picture_library:v2.1.9'
    implementation files('libs/commons-lang3-3.0.jar')
//卡顿检测
    implementation 'com.github.markzhai:blockcanary-android:1.5.0'
    //内存泄漏检测
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
//FaceBook Stetho debug库
    implementation 'com.facebook.stetho:stetho:1.5.0'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'

    implementation 'com.flyco.tablayout:FlycoTabLayout_Lib:2.1.2@aar'

    implementation 'com.github.mmin18:realtimeblurview:1.1.0'

    implementation('com.alibaba.android:vlayout:1.2.8@aar') {
        transitive = true
    }

    implementation 'com.youth.banner:banner:1.4.10'

    implementation 'com.oushangfeng:PinnedSectionItemDecoration:1.2.4'

    // 定义protobuf依赖，使用精简版
    implementation "com.google.protobuf:protobuf-lite:3.0.0"
    implementation('com.squareup.retrofit2:converter-protobuf:2.2.0') {
        exclude group: 'com.google.protobuf', module: 'protobuf-java'
    }

}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.0.0'
    }
    plugins {
        javalite {
            artifact = 'com.google.protobuf:protoc-gen-javalite:3.0.0'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                javalite {}
            }
        }
    }
}

