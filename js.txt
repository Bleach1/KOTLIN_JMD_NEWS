1.let允许你声明一个作用域被限制在块级中的变量、语句或者表达式。在Function中局部变量推荐使用let变量，避免变量名冲突

JavaScript 拥有动态类型。这意味着相同的变量可用作不同的类型：

var x;               // x 为 undefined
var x = 5;           // 现在 x 为数字
var x = "John";      // 现在 x 为字符串

对象声明
var person={firstname:"John", lastname:"Doe", id:5566};

常见的HTML事件
onchange	HTML 元素改变
onclick	用户点击 HTML 元素
onmouseover	用户在一个HTML元素上移动鼠标
onmouseout	用户从一个HTML元素上移开鼠标
onkeydown	用户按下键盘按键
onload	浏览器已完成页面的加载

遍历Map
let iterable = new Map([["a", 1], ["b", 2], ["c", 3]]);

for (let [key, value] of iterable) {
  console.log(value);
}


在 JavaScript 中有 5 种不同的数据类型：
string
number
boolean
object
function

3 种对象类型：
Object
Date
Array

2 个不包含任何值的数据类型：
null
undefined



JSON.parse()	用于将一个 JSON 字符串转换为 JavaScript 对象。
JSON.stringify()	用于将 JavaScript 值转换为 JSON 字符串。

href="#"与href="javascript:void(0)"的区别
# 包含了一个位置信息，默认的锚是#top 也就是网页的上端。

而javascript:void(0), 仅仅表示一个死链接。
-----------------------------------------------------------------------------------------------------
ES6:
1.let表示变量、const表示常量。let和const都是块级作用域
{在一个函数内部在一个代码块内部}
2.模板字符串
    const name = 'lux'
    console.log(`hello ${name}`) //hello lux
